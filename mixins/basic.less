#grid {
	.basic (@gridColumns, @withPrefix, @withSuffix, @grid-basic-withNoGutter) {
		@namespace: ;
		#grid > .basic (@namespace, @gridColumns, @withPrefix, @withSuffix, @grid-basic-withNoGutter);
	}
	.basic (@namespace, @gridColumns, @withPrefix, @withSuffix, @grid-basic-withNoGutter) {
		.spanX (@index) when (@index < @gridColumns + 1) {
			.@{namespace}span-@{index} {
				.span (@index);
			}
			.span (@columns) {
				@spanWidth: (100% / @gridColumns) * @columns;
				width: @spanWidth - @grid-ie8-gutterWidth;
				width: ~"-webkit-calc(@{spanWidth} - @{grid-gutterWidth})";
				width:    ~"-moz-calc(@{spanWidth} - @{grid-gutterWidth})";
				width:      ~"-o-calc(@{spanWidth} - @{grid-gutterWidth})";
				width:         ~"calc(@{spanWidth} - @{grid-gutterWidth})";
			}
			.spanX (@index + 1);
		}
		
		.withPrefix (@withPrefix) when (@withPrefix = true) {
			.prefixX (@index) when (@index < @gridColumns) {
				.@{namespace}prefix-@{index} {
					.prefix (@index);
				}
				.prefixX (@index + 1);
			}
			.prefix (@columns) {
				@prefixWidth: (100% / @gridColumns) * @columns;
				margin-left: @prefixWidth + @grid-ie8-gutterWidth;
				margin-left: ~"-webkit-calc(@{prefixWidth} + @{grid-gutterWidth})";
				margin-left:    ~"-moz-calc(@{prefixWidth} + @{grid-gutterWidth})";
				margin-left:      ~"-o-calc(@{prefixWidth} + @{grid-gutterWidth})";
				margin-left:         ~"calc(@{prefixWidth} + @{grid-gutterWidth})";
			}
			.prefixX (1);
		}

		.withSuffix (@withSuffix) when (@withSuffix = true) {
			.suffixX (@index) when (@index < @gridColumns) {
				.@{namespace}suffix-@{index} {
					.suffix (@index);
				}
				.suffixX (@index + 1);
			}
			.suffix (@columns) {
				margin-right: (100% / @gridColumns) * @columns;
			}
			.suffixX (1);
		}
		.withNoGutter (@grid-basic-withNoGutter) when (@grid-basic-withNoGutter = true) {
			@grid-basic-withNoGutter: false;
			@grid-ie8-gutterWidth: 0;
			@grid-gutterWidth: 0;
			.no-gutter {
				#grid > .basic (@grid-basic-columns, @grid-basic-withPrefix, @grid-basic-withSuffix, @grid-basic-withNoGutter);
			}

		}
		.spanX (1);
		.withPrefix (@withPrefix);
		.withSuffix (@withSuffix);
		.withNoGutter (@grid-basic-withNoGutter);
	}
}