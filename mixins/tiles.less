#grid {
	.tiles (@gridColumns, @grid-tiles-withNoGutter) {
		@namespace: ;
		#grid > .tiles (@namespace, @gridColumns, @grid-tiles-withNoGutter);
	}
	.tiles (@namespace, @gridColumns, @grid-tiles-withNoGutter) {
		// define
		.columnX (@index) when (@index < @gridColumns + 1) {
			.@{namespace}has-@{index} {
				.column {
					@columnWidth: 100% / @index;
					width: @columnWidth - @grid-ie8-gutterWidth;
					width: ~"-webkit-calc(@{columnWidth} - @{grid-gutterWidth})";
					width:    ~"-moz-calc(@{columnWidth} - @{grid-gutterWidth})";
					width:      ~"-o-calc(@{columnWidth} - @{grid-gutterWidth})";
					width:         ~"calc(@{columnWidth} - @{grid-gutterWidth})";
				}
			}
			.columnX (@index + 1);
		}
		.withNoGutter (@grid-tiles-withNoGutter) when (@grid-tiles-withNoGutter = true) {
			.columnX (@index) when (@index < @gridColumns + 1) {
				.@{namespace}has-@{index} {
					&.no-gutter {
						.column {
							width: 100% / @index;
						}
					}
				}
				.columnX (@index + 1);
			}
			.columnX (1);
		}

		// generate
		.columnX (1);
		.withNoGutter (@grid-tiles-withNoGutter);
	}
}