#grid {
	
	.base(@gutterWidth) {
		.row {
			overflow: hidden;
			margin-left: 0 - @gutterWidth;
			list-style: none;
			letter-spacing: -4px; /* Fix inline-block weirdness */
			font-size: 0;
			.column, [class*="span-"], [class*="column-"] {
				display: inline-block;
				-webkit-box-sizing: border-box;
				-moz-box-sizing: border-box;
				-ms-box-sizing: border-box;
				-o-box-sizing: border-box;
				box-sizing: border-box;
				padding-left: @gutterWidth;
				font-size: @gridFontsize;
				min-height: 1px; /* prevent collapsing columns */
				vertical-align: top;
				letter-spacing: 0; /* Restore letter spacing. */
				*display: inline; /* For IE6/IE7 */
				*zoom: 1; /* For IE6/IE7 */	
			}
			&.no-spacing {
				margin-left: 0;
				.column, [class*="span-"], [class*="column-"] {
					padding-left: 0;
				}
			}
			&.center {
				text-align: center;
			}
		}
		.reset(@resetGutterWidth) {
			.row {
				margin-left: 0 - @resetGutterWidth;
				.column, [class*="span-"], [class*="column-"] {
					padding-left: @resetGutterWidth;
				}
			}
		}
	}

	.core (@screenSize, @gridColumns, @preControl, @sufControl) when (@screenSize = default){
		.spanX (@index) when (@index < @gridColumns + 1) {
			(~".span-@{index}") {
				.span (@index);
			}
			.spanX (@index + 1);
		}
		.span (@columns) {
			width: (100% / @gridColumns) * @columns;
		}
		.spanX (1);
		

		.withPrefix (@preControl) when (@preControl = true) {
			.prefixX (@index) when (@index < @gridColumns) {
				(~".prefix-@{index}") {
					.prefix (@index);
				}
				.prefixX (@index + 1);
			}
			.prefix (@columns) {
				margin-left: (100% / @gridColumns) * @columns;
			}
			.prefixX (1);
		}
		.withPrefix (@preControl);

		.withSuffix (@sufControl) when (@sufControl = true) {
			.suffixX (@index) when (@index < @gridColumns) {
				(~".suffix-@{index}") {
					.suffix(@index);
				}
				.suffixX (@index + 1);
			}
			.suffix (@columns) {
				margin-right: (100% / @gridColumns) * @columns;
			}	
			.suffixX (1);		
		}
		.withSuffix (@sufControl);	
	}



	.core (@screenSize, @gridColumns, @preControl, @sufControl) when not (@screenSize = default){
		.column, [class*="span-"], [class*="column-"] {
			width: 100%;
		}
		[class*="prefix-"] {
			margin-left: 0;
		}
		[class*="suffix-"] {
			margin-right: 0;
		}

		.XspanX (@index) when (@index < @gridColumns + 1) {
			(~".@{screenSize}-span-@{index}") {
				.Xspan (@index);
			}
			.XspanX (@index + 1);
		}
		.Xspan (@columns) {
			width: (100% / @gridColumns) * @columns;
		}
		.XspanX (1);
		

		.withPrefix (@preControl) when (@preControl = true) {
			.XprefixX (@index) when (@index < @gridColumns) {
				(~".@{screenSize}-prefix-@{index}") {
					.Xprefix (@index);
				}
				.XprefixX (@index + 1);
			}
			.Xprefix (@columns) {
				margin-left: (100% / @gridColumns) * @columns;
			}
			.XprefixX (1);
		}
		.withPrefix (@preControl);

		.withSuffix (@sufControl) when (@sufControl = true) {
			.XsuffixX (@index) when (@index < @gridColumns) {
				(~".@{screenSize}-suffix-@{index}") {
					.Xsuffix (@index);
				}
				.XsuffixX (@index + 1);
			}
			.Xsuffix (@columns) {
				margin-right: (100% / @gridColumns) * @columns;
			}	
			.XsuffixX (1);		
		}
		.withSuffix (@sufControl);
	}

	.equalization (@screenSize, @gridColumns) when (@screenSize = default){
		.columnX (@index) when (@index < @gridColumns + 1) {
			(~".has-@{index}") {
				.column {
					width: 100% / @index;
				}
			}
			.columnX (@index + 1);
		}

		// generate columns
		.columnX (1);
	}
	.equalization (@screenSize, @gridColumns) when not (@screenSize = default){
		.columnX (@index) when (@index < @gridColumns + 1) {
			(~".@{screenSize}-has-@{index}") {
				.column {
					width: 100% / @index;
				}
			}
			.columnX (@index + 1);
		}

		// generate columns
		.columnX (1);
	}



	.simplifyBase (@gutterWidth) {
		.row {
			overflow: hidden;
			margin-left: 0 - @gutterWidth;
			list-style: none;
			letter-spacing: -4px; /* Fix inline-block weirdness */
			font-size: 0;
			.column {
				display: inline-block;
				-webkit-box-sizing: border-box;
				-moz-box-sizing: border-box;
				-ms-box-sizing: border-box;
				-o-box-sizing: border-box;
				box-sizing: border-box;
				padding-left: @gutterWidth;
				font-size: @gridFontsize;
				min-height: 1px; /* prevent collapsing columns */
				vertical-align: top;
				letter-spacing: 0; /* Restore letter spacing. */
				*display: inline; /* For IE6/IE7 */
				*zoom: 1; /* For IE6/IE7 */	
			}
			&.no-spacing {
				margin-left: 0;
				.column, [class*="span-"], [class*="column-"] {
					padding-left: 0;
				}
			}
			.full {
				width: 100%;
			}
			.half, .two-fourth, .three-sixth {
				width: 50%;
			}
			.third, .two-sixth {
				width: 33.3333%;
			}
			.two-third {
				width: 66.6666%;
			}
			.fourth {
				width: 25%;
			}
			.three-fourth {
				width: 75%;
			}
			.fifth {
				width: 20%;
			}
			.two-fifth {
				width: 40%;
			}
			.three-fifth {
				width: 60%;
			}
			.four-fifth {
				width: 80%;
			}
			.sixth {
				width: 16.6666%;
			}
			.five-sixth {
				width: 83.3333%;
			}
		}
		.reset(@resetGutterWidth) {
			.row {
				margin-left: 0 - @resetGutterWidth;
				.column, [class*="span-"], [class*="column-"] {
					padding-left: @resetGutterWidth;
				}
			}
		}	
	}

	.simplify (@screenSize, @columnType) when (@columnType = full){	
		.row {
			(~".@{screenSize}-full") {
				width: 100%;
			}
		}
	}
	.simplify (@screenSize, @columnType) when (@columnType = half){
		.row {
			(~".@{screenSize}-full") {
				width: 100%;
			}
			(~".@{screenSize}-half") {
				width: 50%;
			}
		}
	}
	.simplify (@screenSize, @columnType) when (@columnType = third){
		.row {
			(~".@{screenSize}-full") {
				width: 100%;
			}
			(~".@{screenSize}-half") {
				width: 50%;
			}
			(~".@{screenSize}-third") {
				width: 33.3333%;
			}
			(~".@{screenSize}-two-third") {
				width: 66.6666%;
			}
		}
	}
	.simplify (@screenSize, @columnType) when (@columnType = fourth){
		.row {
			(~".@{screenSize}-full") {
				width: 100%;
			}
			(~".@{screenSize}-half"), (~".@{screenSize}-two-fourth") {
				width: 50%;
			}
			(~".@{screenSize}-third") {
				width: 33.3333%;
			}
			(~".@{screenSize}-two-third") {
				width: 66.6666%;
			}
			(~".@{screenSize}-fourth") {
				width: 25%;
			}
			(~".@{screenSize}-three-fourth") {
				width: 75%;
			}
		}
	}
	.simplify (@screenSize, @columnType) when (@columnType = fifth){
		.row {
			(~".@{screenSize}-full") {
				width: 100%;
			}
			(~".@{screenSize}-half"), (~".@{screenSize}-two-fourth") {
				width: 50%;
			}
			(~".@{screenSize}-third") {
				width: 33.3333%;
			}
			(~".@{screenSize}-two-third") {
				width: 66.6666%;
			}
			(~".@{screenSize}-fourth") {
				width: 25%;
			}
			(~".@{screenSize}-three-fourth") {
				width: 75%;
			}
			(~".@{screenSize}-fifth") {
				width: 20%;
			}
			(~".@{screenSize}-two-fifth") {
				width: 40%;
			}
			(~".@{screenSize}-three-fifth") {
				width: 60%;
			}
			(~".@{screenSize}-four-fifth") {
				width: 80%;
			}
		}
	}
	.simplify (@screenSize, @columnType) when (@columnType = sixth){
		.row {
			(~".@{screenSize}-full") {
				width: 100%;
			}
			(~".@{screenSize}-half"), (~".@{screenSize}-two-fourth"), (~".@{screenSize}-three-sixth") {
				width: 50%;
			}
			(~".@{screenSize}-third"), (~".@{screenSize}-two-sixth") {
				width: 33.3333%;
			}
			(~".@{screenSize}-two-third") {
				width: 66.6666%;
			}
			(~".@{screenSize}-fourth") {
				width: 25%;
			}
			(~".@{screenSize}-three-fourth") {
				width: 75%;
			}
			(~".@{screenSize}-fifth") {
				width: 20%;
			}
			(~".@{screenSize}-two-fifth") {
				width: 40%;
			}
			(~".@{screenSize}-three-fifth") {
				width: 60%;
			}
			(~".@{screenSize}-four-fifth") {
				width: 80%;
			}
			(~".@{screenSize}-sixth") {
				width: 16.6666%;
			}
			(~".@{screenSize}-five-sixth") {
				width: 83.3333%;
			}
		}
	}
}