#grid {
	.base(@gutterWidth) {
		.row {
			overflow: hidden;
			margin-right: 0 - @gutterWidth;
			list-style: none;
			letter-spacing: -4px; /* Fix inline-block weirdness */
			.column, [class*="span-"], [class*="column-"] {
				display: inline-block;
				-webkit-box-sizing: border-box;
				-moz-box-sizing: border-box;
				-ms-box-sizing: border-box;
				box-sizing: border-box;
				padding-right: @gutterWidth;
				min-height: 1px; /* prevent collapsing columns */
				vertical-align: top;
				letter-spacing: 0; /* Restore letter spacing. */
				*display: inline; /* For IE6/IE7 */
				*zoom: 1; /* For IE6/IE7 */
			}
			&.no-spacing {
				margin-right: 0;
				.column, [class*="span-"], [class*="column-"] {
					padding-right: 0;
				}
			}
		}

		.reset(@resetGutterWidth) {
			.row {
				margin-right: 0 - @resetGutterWidth;
				.column, [class*="span-"], [class*="column-"] {
					padding-right: @resetGutterWidth;
				}
			}
		}
	}
	.core {
		.defaultScreen (@gridColumns){
			.row {
				.spanX (@index) when (@index < @gridColumns + 1) {
					(~".span-@{index}") {
						.span (@index);
					}
					.spanX (@index + 1);
				}
				
				.prefixX (@index) when (@index < @gridColumns) {
					(~".prefix-@{index}") {
						.prefix (@index);
					}
					.prefixX (@index + 1);
				}

				.suffixX (@index) when (@index < @gridColumns) {
					(~".suffix-@{index}") {
						.suffix(@index);
					}
					.suffixX (@index + 1);
				}

				.span (@columns) {
					width: (100% / @gridColumns) * @columns;
				}
				.prefix (@columns) {
					margin-left: (100% / @gridColumns) * @columns;
				}
				.suffix (@columns) {
					margin-right: (100% / @gridColumns) * @columns;
				}

				// Generate .spanX, prefixX and suffixX
				.spanX (1);
				.prefixX (1);
				.suffixX (1);
			}
		}
		.tabletScreen () {
			.row {
				[class*="span-"] {
					&.tablet-full {
						width: 100%;
					}
					&.tablet-two-thirds {
						width: 66.6666%;
					}
					&.tablet-half {
						width: 50%;
					}
					&.tablet-third {
						width: 33.3333%;
					}
				}
				[class*="prefix-"] {
					&.tablet-full, &.tablet-half, &.tablet-two-thirds, &.tablet-third {
						margin-left: 0;
					}
				}
				[class*="suffix-"] {
					&.tablet-full, &.tablet-half, &.tablet-two-thirds, &.tablet-third {
						margin-right: 0;
					}
				}
			}
		}
		.mobileScreen () {
			.row {
				[class*="span-"] {
					width: 100%;
					&.mobile-two-thirds {
						width: 66.6666%;
					}
					&.mobile-half {
						width: 50%;
					}
					&.mobile-third {
						width: 33.3333%;
					}
				}
				[class*="prefix-"] {
					margin-left: 0;
				}
				[class*="suffix-"] {
					margin-right: 0;
				}
			}
		}
	}
	.equalization {
		.defaultScreen (@gridColumns){
			.columnX (@index) when (@index < @gridColumns + 1) {
				(~".has-@{index}") {
					.column {
						width: 100% / @index;
					}
				}
				.columnX (@index + 1);
			}
			// generate columns
			.columnX (1);
		}

		.tabletScreen (@gridColumns){
			.columnX (@index) when (@index < @gridColumns + 1) {
				(~".tablet-has-@{index}") {
					.column {
						width: 100% / @index;
					}
				}
				.columnX (@index + 1);
			}

			// generate columns
			.columnX (1);
		}

		.mobileScreen (@gridColumns){
			.columnX (@index) when (@index < @gridColumns + 1) {
				(~".mobile-has-@{index}") {
					.column {
						width: 100% / @index;
					}
				}
				.columnX (@index + 1);
			}

			// generate columns
			.columnX (1);
		}
	}
}